image: node:latest

stages:
  - lint
  - build
  - test

cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm/
    - ~/.cache/Cypress
    - node_modules

before_script: # Runs before every job.
  - npm ci --cache .npm --prefer-offline

linting:
  stage: lint
  script: npm run lint

linting css:
  stage: lint
  script: npm run lint:css

build:
  stage: build
  script: npm run build
  artifacts:
    paths:
      - dist/

test:
  image: cypress/base:12
  stage: test
  before_script:
    - npm ci --cache .npm --prefer-offline
    - npx cypress cache path # Shows the path where the Cypress cache versions are located.
    - npx cypress cache list # Shows a list of cached Cypress versions.
    - npm install cypress # This will automatically install Cypress from cache (if Available).
    - npm run cy:verify # Verifies Cypress package + Cypress binary is installed.
    - npm run cy:info # Logs the Current environment (which browsers are available, names of env variables, binary caches
  script:
    - npm run build # Build application.
    - npm run serve:ci # Run a version of the application in a background process. Otherwise cypress can't run. It will be stuck on serving.
    - npm run e2e:record # Cypress tests + video
  artifacts:
    when: always
    paths:
      - cypress/videos/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
